@page "/"
@rendermode InteractiveServer
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Identity
@using PoMad.Data
@using PoMad.Models
@using PoMad.Services
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject DailyDataService DailyDataService
@inject NavigationManager NavigationManager

<h1>Dashboard</h1>

<div class="row">
    <div class="col-md-12">
        <h3>Monthly Weight</h3>
        <RadzenChart>
            <RadzenColumnSeries Data="_monthlyWeightData" CategoryProperty="Month" ValueProperty="Weight" Title="Weight" />
            <RadzenCategoryAxis>
                <RadzenAxisTitle Text="Month" />
            </RadzenCategoryAxis>
            <RadzenValueAxis>
                <RadzenAxisTitle Text="Weight" />
            </RadzenValueAxis>
        </RadzenChart>
    </div>
    <div class="col-md-12">
        <h3>Monthly Calories</h3>
        <RadzenChart>
            <RadzenColumnSeries Data="_monthlyCaloriesData" CategoryProperty="Month" ValueProperty="Calories" Title="Calories" />
            <RadzenCategoryAxis>
                <RadzenAxisTitle Text="Month" />
            </RadzenCategoryAxis>
            <RadzenValueAxis>
                <RadzenAxisTitle Text="Calories" />
            </RadzenValueAxis>
        </RadzenChart>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-12">
        <h3>OMAD Days</h3>
        <RadzenDataGrid AllowFiltering="true" AllowPaging="true" PageSize="10" AllowSorting="true" Data="_dailyDataList" TItem="DailyData">
            <Columns>
                <RadzenDataGridColumn TItem="DailyData" Property="Date" Title="Date" />
                <RadzenDataGridColumn TItem="DailyData" Property="Calories" Title="Calories" />
                <RadzenDataGridColumn TItem="DailyData" Property="Weight" Title="Weight" />
                <RadzenDataGridColumn TItem="DailyData" Property="DidOMAD" Title="Did OMAD" />
            </Columns>
        </RadzenDataGrid>
    </div>
</div>

@code {
    private List<DailyData> _dailyDataList;
    private List<MonthlyWeightData> _monthlyWeightData;
    private List<MonthlyCaloriesData> _monthlyCaloriesData;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);
        if (user != null)
        {
            _dailyDataList = await DailyDataService.GetDailyDataForUserAsync(user.Id);
            GenerateMonthlyWeightData();
            GenerateMonthlyCaloriesData();
        }
    }

    private void GenerateMonthlyWeightData()
    {
        var allMonths = Enumerable.Range(1, 12).Select(m => new { Month = $"{DateTime.Today.Year}-{m:D2}" });
        _monthlyWeightData = allMonths
            .GroupJoin(_dailyDataList,
                m => m.Month,
                d => $"{d.Date.Year}-{d.Date.Month:D2}",
                (m, g) => new { Month = m.Month, Weights = g.Select(d => d.Weight) })
            .Select(x => new MonthlyWeightData
            {
                Month = x.Month,
                Weight = x.Weights.Any() ? (int)x.Weights.Average() : 0
            })
            .ToList();
    }

    private void GenerateMonthlyCaloriesData()
    {
        var allMonths = Enumerable.Range(1, 12).Select(m => new { Month = $"{DateTime.Today.Year}-{m:D2}" });
        _monthlyCaloriesData = allMonths
            .GroupJoin(_dailyDataList,
                m => m.Month,
                d => $"{d.Date.Year}-{d.Date.Month:D2}",
                (m, g) => new { Month = m.Month, Calories = g.Select(d => d.Calories) })
            .Select(x => new MonthlyCaloriesData
            {
                Month = x.Month,
                Calories = x.Calories.Any() ? (int)x.Calories.Average() : 0
            })
            .ToList();
    }

    public class MonthlyWeightData
    {
        public string Month { get; set; }
        public int Weight { get; set; }
    }

    public class MonthlyCaloriesData
    {
        public string Month { get; set; }
        public int Calories { get; set; }
    }
}